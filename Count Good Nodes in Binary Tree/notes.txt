Problem Statement:
Given a binary tree root, a node X in the tree is named good if in the path from root to X there are no nodes with a value greater than X.

Return the number of good nodes in the binary tree.

Solution:
The idea here is to use dfs traversal when for the first time we visit a node we check whether the path that
we are following from root whatever be the maximum value incurred during that process should always be less than
or equal to current value if it so then we have a path following the condition specified by question. The
start values should be root and the value of root because a root node always follows the condition

TC -> O(N)
SC -> O(N)

Problem Link: https://leetcode.com/problems/count-good-nodes-in-binary-tree/