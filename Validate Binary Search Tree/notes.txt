Problem Statement:
Given the root of a binary tree, determine if it is a valid binary search tree (BST).

A valid BST is defined as follows:

    The left subtree of a node contains only nodes with keys less than the node's key.
    The right subtree of a node contains only nodes with keys greater than the node's key.
    Both the left and right subtrees must also be binary search trees.


Solution:
The idea here is to observe that each subtree represent a range of values it can hold according to the condition
of BST. so we create two value lo and hi which defines valid range of values and if all nodes statisfy this 
condition we can say is valid BST.

TC -> O(N)
SC -> O(N)

Problem Link: https://leetcode.com/problems/validate-binary-search-tree/